@model DSS.BLL.DTO.Labour_Relations_DTO

@{
    ViewBag.Title = "Edit_Labour";
}

<h1 style="text-align:center;color:darkorange;color:darkorange;font-weight:bold">Labour Relations - Edit Form</h1>


@using (Html.BeginForm())
{
    <div id="">
        <div style="width:500px;margin:auto">
            @*<h4 style="text-align:center">Edit Labour_Relations Id @Html.DisplayFor(id => id.Id):</h4>*@
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div style="color:red">
                * - Required fields
            </div>
            <p></p>
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                <label class = "control-label col-md-12" style="font-weight:bold">
                    Date:*
                </label>
                @*@Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class = "control-label col-md-12" style="font-weight:bold">Location:*</label>
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Location, ViewBag.locations as SelectList, "", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class = "control-label col-md-12" style="font-weight:bold">
                    Union:
                </label>
                @*@Html.LabelFor(model => model.Union, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Union, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Union, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class = "control-label col-md-12" style="font-weight:bold">
                    Category:
                </label>
                @*@Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class = "control-label col-md-12" style="font-weight:bold">
                    Details:
                </label>
                @*@Html.LabelFor(model => model.Details, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Details, new { @class = "form-control" })
                    @*@Html.EditorFor(model => model.Details, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.ValidationMessageFor(model => model.Details, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class = "control-label col-md-12" style="font-weight:bold">
                    Status:
                </label>
                @*@Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Status, new { @class = "form-control" })
                    @*@Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class = "control-label col-md-12" style="font-weight:bold">
                    Accruals:
                </label>
                @*@Html.LabelFor(model => model.Accruals, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Accruals, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Accruals, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class = "control-label col-md-12" style="font-weight:bold">
                    Outcome:
                </label>
                @*@Html.LabelFor(model => model.Outcome, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Outcome, new { @class = "form-control" })
                    @*@Html.EditorFor(model => model.Outcome, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.ValidationMessageFor(model => model.Outcome, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class = "control-label col-md-12" style="font-weight:bold">
                    Lessons Learned:
                </label>
                @*@Html.LabelFor(model => model.Lessons_Learned, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Lessons_Learned, new { @class = "form-control" })
                    @*@Html.EditorFor(model => model.Lessons_Learned, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.ValidationMessageFor(model => model.Lessons_Learned, "", new { @class = "text-danger" })
                </div>
            </div>
            <p></p>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Update" class="btn btn-success" />
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to All Records", "Select_Labour", "Select", "", new { id = "backBtn" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}



<style>
    #center {
        /*width: 500px;
            margin: auto;
        border: 1px silver solid;
        border-radius: 22px;*/
        padding: 27px;
    }

    #backBtn {
        border: 2px blue solid;
        border-radius: 22px;
        background-color: white;
        color: blue;
        padding: 15px;
        text-decoration: none;
    }

        #backBtn:hover {
            background-color: blue;
            color: white;
        }
</style>