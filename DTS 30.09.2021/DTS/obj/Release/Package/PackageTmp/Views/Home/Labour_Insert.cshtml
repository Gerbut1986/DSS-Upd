@model DSS.BLL.DTO.Labour_Relations_DTO

@{
    ViewBag.Title = "Labour_Insert";
}


<h1 style="color:darkorange;font-weight:bold;text-align:center">Labour Relations - Entry Form</h1>

@using (Html.BeginForm())
{
    <div id="center">
        @Html.AntiForgeryToken()
        @Html.ActionLink("Show All Records", "Select_Labour", "Select", "", new { id = "select" })
        <br /> <br />
               <div class="" style="width:500px;margin:auto">
                   <hr />
                   @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                   <div style="color:red">
                       * - Required fields
                   </div>
                   <p></p>
                   <div class="form-group">
                       @Html.Label("Date:*", htmlAttributes: new { @class = "control-label col-md-12", style="font-weight:bold" })
                       @*@Html.LabelFor(model => model.Date, htmlAttributes: new { @@class = "control-label col-md-12" , style="font-weight:bold" })*@
                       <div class="col-md-10">
                           @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                           @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                       </div>
                   </div>

                   <div class="form-group">
                       <label class = "control-label col-md-12"  style="font-weight:bold">
                           Location:*
                       </label>
                       <div class="col-md-10">
                           @Html.DropDownListFor(model => model.Location, ViewBag.locations as SelectList, "", new { @class = "form-control" })
                           @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                       </div>
                   </div>

                   <div class="form-group">
                       @Html.Label("Union:", htmlAttributes: new { @class = "control-label col-md-12" , style="font-weight:bold" })
                       @*@Html.LabelFor(model => model.Union, htmlAttributes: new { @@class = "control-label col-md-12" , style="font-weight:bold" })*@
                       <div class="col-md-10">
                           @Html.EditorFor(model => model.Union, new { htmlAttributes = new { @class = "form-control" } })
                           @Html.ValidationMessageFor(model => model.Union, "", new { @class = "text-danger" })
                       </div>
                   </div>

                   <div class="form-group">
                       @Html.Label("Category:", htmlAttributes: new { @class = "control-label col-md-12" , style="font-weight:bold" })
                       @*@Html.LabelFor(model => model.Category, htmlAttributes: new { @@class = "control-label col-md-12" , style="font-weight:bold" })*@
                       <div class="col-md-10">
                           @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } })
                           @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                       </div>
                   </div>

                   <div class="form-group">
                       @Html.Label("Details:", htmlAttributes: new { @class = "control-label col-md-12" , style="font-weight:bold" })
                       @*@Html.LabelFor(model => model.Details, htmlAttributes: new { @@class = "control-label col-md-12" , style="font-weight:bold" })*@
                       <div class="col-md-10">
                           @Html.TextAreaFor(model => model.Details, new { @class = "form-control" })
                           @*@Html.EditorFor(model => model.Details, new { htmlAttributes = new { @class = "form-control" } })*@
                           @Html.ValidationMessageFor(model => model.Details, "", new { @class = "text-danger" })
                       </div>
                   </div>

                   <div class="form-group">
                       @Html.Label("Status:", htmlAttributes: new { @class = "control-label col-md-12" , style="font-weight:bold" })
                       @*@Html.LabelFor(model => model.Status, htmlAttributes: new { @@class = "control-label col-md-12" , style="font-weight:bold" })*@
                       <div class="col-md-10">
                           @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                           @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                       </div>
                   </div>

                   <div class="form-group">
                       @Html.Label("Accruals?:", htmlAttributes: new { @class = "control-label col-md-12" , style="font-weight:bold" })
                       @*@Html.LabelFor(model => model.Accruals, htmlAttributes: new { @@class = "control-label col-md-12" , style="font-weight:bold" })*@
                       <div class="col-md-10">
                           @Html.EditorFor(model => model.Accruals, new { htmlAttributes = new { @class = "form-control" } })
                           @Html.ValidationMessageFor(model => model.Accruals, "", new { @class = "text-danger" })
                       </div>
                   </div>

                   <div class="form-group">
                       @Html.Label("Final Outcome:", htmlAttributes: new { @class = "control-label col-md-12" , style="font-weight:bold" })
                       @*@Html.LabelFor(model => model.Outcome, htmlAttributes: new { @@class = "control-label col-md-12" , style="font-weight:bold" })*@
                       <div class="col-md-10">
                           @Html.TextAreaFor(model => model.Outcome, new { @class = "form-control" })
                           @*@Html.EditorFor(model => model.Outcome, new { htmlAttributes = new { @class = "form-control" } })*@
                           @Html.ValidationMessageFor(model => model.Outcome, "", new { @class = "text-danger" })
                       </div>
                   </div>

                   <div class="form-group">
                       @Html.Label("Lessons Learned:", htmlAttributes: new { @class = "control-label col-md-12" , style="font-weight:bold" })
                       @*@Html.LabelFor(model => model.Lessons_Learned, htmlAttributes: new { @@class = "control-label col-md-12" , style="font-weight:bold" })*@
                       <div class="col-md-10">
                           @Html.TextAreaFor(model => model.Lessons_Learned, new { @class = "form-control" })
                           @*@Html.EditorFor(model => model.Lessons_Learned, new { htmlAttributes = new { @class = "form-control" } })*@
                           @Html.ValidationMessageFor(model => model.Lessons_Learned, "", new { @class = "text-danger" })
                       </div>
                   </div>
                   <p></p>
                   <div class="form-group">
                       <div class="col-md-offset-2 col-md-10">
                           <input type="submit" value="Add a New Record" class="btn btn-success" />
                       </div>
                   </div>
               </div>
    </div>
}

<div>
    @Html.ActionLink("Back to WOR Tabs", "WOR_Tabs", "Home", new { id = "back" })
</div>
<style>
    #center {
        /*width: 650px;
        margin: auto;
        border: 1px black solid;
        position: relative;*/
        padding: 17px;
        /*border-radius: 22px;*/
    }
    #back {
        border: 2px solid blue;
        border-radius: 22px;
        position: absolute;
        padding: 11px;
        text-decoration: none;
        background-color: none;
        color: brown
    }

        #back:hover {
            text-decoration: none;
            background-color: black;
            color: white
        }

    #select {
        border: 2px solid darkorange;
        position: absolute;
        border-radius: 22px;
        padding: 7px;
        color: darkorange;
        text-decoration: none;
    }

        #select:hover {
            background-color: darkorange;
            color: white;
        }
</style>
