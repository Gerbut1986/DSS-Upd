@model DSS.BLL.DTO.Critical_Incidents_DTO

@{
    ViewBag.Title = "Edit_Incidents";
}

    <h1 style="text-align:center;color:darkorange;font-weight:bold">Critical Incidents - Edit Form</h1>


@using (Html.BeginForm())
{
<div id="">
    <div style="width:500px;margin:auto">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*@Html.HiddenFor(model => model.id)*@
        <div style="color:red">
            * - Required fields
        </div>
        <p></p>
        <div class="form-group">
            <label class="control-label col-md-12" style="font-weight:bold">
                Date:<span style="color:red">*</span>
            </label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-12" style="font-weight:bold">
                CI Form Number:<span style="color:red">*</span>
            </label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.CI_Form_Number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CI_Form_Number, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-lg-4" style="font-weight:bold">
                CI Category/Type:<span style="color:red">*</span>
            </label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CI_Category_Type, ViewBag.locations[1] as SelectList, "", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CI_Category_Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-12" style="font-weight:bold">
                Location:<span style="color:red">*</span>
            </label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Location, ViewBag.locations[0] as SelectList, "", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-12" style="font-weight:bold">
                Brief Description:<span style="color:red">*</span>
            </label>
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Brief_Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Brief_Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-12" style="font-weight:bold">MOH Notified:&nbsp;</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.MOH_Notified, ViewBag.locations[2] as SelectList, "", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MOH_Notified, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-12" style="font-weight:bold">Police Notified:&nbsp;</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Police_Notified, ViewBag.locations[2] as SelectList, "", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Police_Notified, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-12" style="font-weight:bold">POA's Notified:&nbsp;</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.POAS_Notified, ViewBag.locations[2] as SelectList, "", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.POAS_Notified, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-12" style="font-weight:bold">Care Plan Updated:&nbsp;</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Care_Plan_Updated, ViewBag.locations[2] as SelectList, "", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Care_Plan_Updated, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-12" style="font-weight:bold" style="">Brief Description Of Quality Improvement Action/Measures:&nbsp;</label>
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Quality_Improvement_Actions, new { @class = "form-control" })
                @*@Html.EditorFor(model => model.Quality_Improvement_Actions, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.Quality_Improvement_Actions, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-12" style="font-weight:bold">MOHLTC Follow Up:&nbsp;</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.MOHLTC_Follow_Up, ViewBag.locations[3] as SelectList, "", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MOHLTC_Follow_Up, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-12" style="font-weight:bold">Was CIS Initiated on Time:&nbsp;</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CIS_Initiated, ViewBag.locations[2] as SelectList, "", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CIS_Initiated, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-12" style="font-weight:bold">All Follow Up Amendments completed Ready for MOH Visit:&nbsp;</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Follow_Up_Amendments, ViewBag.locations[2] as SelectList, "", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Follow_Up_Amendments, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-12" style="font-weight:bold">Risk Locked:&nbsp;</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Risk_Locked, ViewBag.locations[2] as SelectList, "", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Risk_Locked, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-12" style="font-weight:bold">File Complete Ready for MOH:&nbsp;</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.File_Complete, ViewBag.locations[2] as SelectList, "", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.File_Complete, "", new { @class = "text-danger" })
            </div>
        </div>
        <p></p>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10" style="width:200px;margin:auto">
                <input type="submit" value="Update" class="btn btn-primary" />
            </div>
        </div>
    </div>
</div>
        }


    <div>
        @Html.ActionLink("Back to All Records", "Select_Incidents", "Select", "", new { id = "backBtn" })
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }


    <style>
        #center {
            /*width: 500px;
            margin: auto;
            border: 1px silver solid;
            border-radius: 22px;*/
            padding: 27px;
        }

        #backBtn {
            border: 2px blue solid;
            border-radius: 22px;
            background-color: white;
            color: blue;
            padding: 15px;
            text-decoration: none;
        }

            #backBtn:hover {
                background-color: blue;
                color: white;
            }
    </style>